plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version "${forge_gradle_version}"
}

version = mod_version
group = mod_id
base.archivesName = mod_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            args "--username=InDev"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    flatDir { dirs 'libs' }
    maven { url = 'https://www.cursemaven.com' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	
    implementation fg.deobf("curse.maven:jei-${jei_version}")
}

processResources {
    var replaceProperties = [
            'mod_id': mod_id,
            'mod_name': mod_name,
            'version': mod_version,
            'mcversion': minecraft_version,
            'mod_description': mod_description,
            'mod_author': mod_author
    ]

    inputs.properties replaceProperties

    filesMatching('mcmod.info') {
        expand replaceProperties
    }
}

jar {
    manifest {
        attributes([
                'Specification-Title'     : mod_name,
                'Specification-Vendor'    : mod_author,
                'Specification-Version'   : '1',
                'Implementation-Title'    : mod_name,
                'Implementation-Vendor'   : mod_author,
                'Implementation-Version'  : mod_version,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')